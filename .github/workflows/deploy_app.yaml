name: Build and Deploy

# on:
#   push:
#     branches:
#       - dev

on:
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'adopt'
        java-version: '17'

    - name: Build with Maven
      run: chmod +x mvnw && ./mvnw clean package
      working-directory: ./app

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
      

    - name: Build Docker image
      run: docker build -t ryaanm/hello-world:latest .
      working-directory: ./app

    - name: Tag Docker image with GitHub SHA
      run: docker tag ryaanm/hello-world:latest ryaanm/hello-world:$(git rev-parse --short HEAD)
      working-directory: ./app

    - name: Push Docker image
      run: docker push ryaanm/hello-world:$(git rev-parse --short HEAD)
      working-directory: ./app

    # - name: Update deployment.yaml with new image version
    #   run: |
    #     ls
    #     cd kube_manifest/ && sed -i "s|image: ryaanm/hello-world:.*|image: ryaanm/hello-world:$(git rev-parse --short HEAD)|" deployment.yaml
    #     git config --global user.name 'github-actions[bot]'
    #     git config --global user.email 'github-actions[bot]@users.noreply.github.com'
    #     git add deployment.yaml
    #     git commit -m "Update deployment.yaml with image version $(git rev-parse --short HEAD)"
    #     git push origin dev
    #   working-directory: .

    - name: Update Image Version 
      uses: fjogeleit/yaml-update-action@main
      
      with:
          valueFile: 'deployment.yaml'
          propertyPath: 'spec.template.spec.containers[0].image'
          value: ryaanm/hello-world:$(git rev-parse --short HEAD)
          branch: dev
          masterBranchName: main
          # targetBranch: development
          createPR: false
          commitChange: true
          message: 'Update Image Version to ${{ steps.image.outputs.version }}' 
          working-directory: ./kube_manifest